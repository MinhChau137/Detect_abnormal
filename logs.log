2023-05-05 21:31:19,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-05 21:31:19,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-05 21:31:19,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-05 21:31:19,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-05 21:31:20,743:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-05 21:31:42,803:INFO:Initializing load_model()
2023-05-05 21:31:42,803:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-05 21:32:15,274:INFO:Initializing predict_model()
2023-05-05 21:32:15,275:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000180CF5FBFD0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-05 21:32:15,275:INFO:Set up data.
2023-05-05 21:32:29,946:INFO:Initializing load_model()
2023-05-05 21:32:29,946:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-05 21:32:30,160:INFO:Initializing predict_model()
2023-05-05 21:32:30,160:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000180CF4DE4A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-05 21:32:30,160:INFO:Set up data.
2023-05-06 15:09:07,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:09:07,041:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:09:07,042:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:09:07,042:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:09:08,675:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-06 15:09:09,621:INFO:Initializing load_model()
2023-05-06 15:09:09,621:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-06 15:09:10,939:INFO:Initializing predict_model()
2023-05-06 15:09:10,939:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000017D60570AF0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:09:10,939:INFO:Set up data.
2023-05-06 15:09:12,143:INFO:Initializing predict_model()
2023-05-06 15:09:12,143:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000017D5EDC3CA0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:09:12,143:INFO:Set up data.
2023-05-06 15:09:13,299:INFO:Initializing predict_model()
2023-05-06 15:09:13,299:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000017D7EEDC0D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:09:13,300:INFO:Set up data.
2023-05-06 15:09:14,487:INFO:Initializing predict_model()
2023-05-06 15:09:14,487:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000017D60570AF0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:09:14,487:INFO:Set up data.
2023-05-06 15:09:15,633:INFO:Initializing predict_model()
2023-05-06 15:09:15,633:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000017D60570AF0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:09:15,633:INFO:Set up data.
2023-05-06 15:09:16,789:INFO:Initializing predict_model()
2023-05-06 15:09:16,789:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000017D7EEDC0D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:09:16,789:INFO:Set up data.
2023-05-06 15:09:17,956:INFO:Initializing predict_model()
2023-05-06 15:09:17,956:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000017D7EEDC0D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:09:17,956:INFO:Set up data.
2023-05-06 15:09:19,133:INFO:Initializing predict_model()
2023-05-06 15:09:19,133:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000017D60570AF0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:09:19,133:INFO:Set up data.
2023-05-06 15:09:20,275:INFO:Initializing predict_model()
2023-05-06 15:09:20,275:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000017D60570AF0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:09:20,275:INFO:Set up data.
2023-05-06 15:09:21,427:INFO:Initializing predict_model()
2023-05-06 15:09:21,427:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000017D7EEDC0D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:09:21,427:INFO:Set up data.
2023-05-06 15:10:06,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:10:06,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:10:06,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:10:06,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:10:06,589:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-06 15:11:16,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:11:16,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:11:16,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:11:16,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:11:16,708:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-06 15:11:17,438:INFO:Initializing load_model()
2023-05-06 15:11:17,438:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-06 15:11:17,760:INFO:Initializing predict_model()
2023-05-06 15:11:17,760:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001EAE13C0DC0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:11:17,760:INFO:Set up data.
2023-05-06 15:14:01,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:14:01,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:14:01,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:14:01,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:14:01,998:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-06 15:14:02,741:INFO:Initializing load_model()
2023-05-06 15:14:02,741:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-06 15:14:03,058:INFO:Initializing predict_model()
2023-05-06 15:14:03,058:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000011A10160DF0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:14:03,058:INFO:Set up data.
2023-05-06 15:18:26,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:18:26,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:18:26,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:18:26,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:18:26,768:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-06 15:18:27,506:INFO:Initializing load_model()
2023-05-06 15:18:27,506:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-06 15:18:27,864:INFO:Initializing predict_model()
2023-05-06 15:18:27,864:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000163BE006920>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:27,864:INFO:Set up data.
2023-05-06 15:18:29,009:INFO:Initializing predict_model()
2023-05-06 15:18:29,009:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001639DF33FA0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:29,009:INFO:Set up data.
2023-05-06 15:18:30,175:INFO:Initializing predict_model()
2023-05-06 15:18:30,175:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000163BE4306A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:30,175:INFO:Set up data.
2023-05-06 15:18:31,317:INFO:Initializing predict_model()
2023-05-06 15:18:31,317:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000163BE4306A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:31,317:INFO:Set up data.
2023-05-06 15:18:32,468:INFO:Initializing predict_model()
2023-05-06 15:18:32,468:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000163BE4306A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:32,469:INFO:Set up data.
2023-05-06 15:18:33,620:INFO:Initializing predict_model()
2023-05-06 15:18:33,620:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000163BE4306A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:33,621:INFO:Set up data.
2023-05-06 15:18:34,792:INFO:Initializing predict_model()
2023-05-06 15:18:34,792:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001639F6E0DF0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:34,792:INFO:Set up data.
2023-05-06 15:18:35,937:INFO:Initializing predict_model()
2023-05-06 15:18:35,937:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000163BE31A140>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:35,937:INFO:Set up data.
2023-05-06 15:18:37,088:INFO:Initializing predict_model()
2023-05-06 15:18:37,088:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000163BE430640>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:37,088:INFO:Set up data.
2023-05-06 15:18:38,241:INFO:Initializing predict_model()
2023-05-06 15:18:38,241:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001639F6E0DF0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:38,241:INFO:Set up data.
2023-05-06 15:18:39,392:INFO:Initializing predict_model()
2023-05-06 15:18:39,392:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000163BE4306A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:39,392:INFO:Set up data.
2023-05-06 15:18:40,546:INFO:Initializing predict_model()
2023-05-06 15:18:40,546:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000163BE4306A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:40,546:INFO:Set up data.
2023-05-06 15:19:07,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:19:07,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:19:07,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:19:07,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:19:07,872:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-06 15:19:08,616:INFO:Initializing load_model()
2023-05-06 15:19:08,616:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-06 15:19:08,918:INFO:Initializing predict_model()
2023-05-06 15:19:08,918:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000252076F6920>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:19:08,918:INFO:Set up data.
2023-05-06 15:19:28,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:19:28,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:19:28,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:19:28,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:19:29,445:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-06 15:19:30,181:INFO:Initializing load_model()
2023-05-06 15:19:30,181:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-06 15:19:30,483:INFO:Initializing predict_model()
2023-05-06 15:19:30,483:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000021FDD5B6920>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:19:30,483:INFO:Set up data.
2023-05-06 15:19:31,641:INFO:Initializing predict_model()
2023-05-06 15:19:31,641:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000021FDD9E06A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:19:31,641:INFO:Set up data.
2023-05-06 15:19:32,798:INFO:Initializing predict_model()
2023-05-06 15:19:32,798:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000021FBEC90DC0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:19:32,798:INFO:Set up data.
2023-05-06 15:19:33,969:INFO:Initializing predict_model()
2023-05-06 15:19:33,969:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000021FDD9E06A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:19:33,969:INFO:Set up data.
2023-05-06 15:19:35,139:INFO:Initializing predict_model()
2023-05-06 15:19:35,139:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000021FBEC90DC0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:19:35,139:INFO:Set up data.
2023-05-06 15:19:36,342:INFO:Initializing predict_model()
2023-05-06 15:19:36,342:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000021FDD5B6920>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:19:36,342:INFO:Set up data.
2023-05-06 15:19:37,480:INFO:Initializing predict_model()
2023-05-06 15:19:37,480:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000021FBEC90DC0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:19:37,480:INFO:Set up data.
2023-05-06 21:30:47,996:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 21:30:47,996:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 21:30:47,996:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 21:30:47,996:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 21:30:49,204:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-06 21:31:10,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 21:31:10,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 21:31:10,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 21:31:10,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 21:31:10,924:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-06 21:31:53,408:INFO:Initializing load_model()
2023-05-06 21:31:53,408:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-06 21:31:53,976:INFO:Initializing predict_model()
2023-05-06 21:31:53,976:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001FE655399F0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 21:31:53,976:INFO:Set up data.
2023-05-06 21:31:55,125:INFO:Initializing predict_model()
2023-05-06 21:31:55,125:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001FE65E9F730>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 21:31:55,125:INFO:Set up data.
2023-05-06 21:31:56,282:INFO:Initializing predict_model()
2023-05-06 21:31:56,282:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001FE65539A50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 21:31:56,282:INFO:Set up data.
2023-05-06 21:31:57,435:INFO:Initializing predict_model()
2023-05-06 21:31:57,435:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001FE65539A50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 21:31:57,435:INFO:Set up data.
2023-05-07 16:18:58,098:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 16:18:58,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 16:18:58,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 16:18:58,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 16:18:59,580:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-07 16:56:15,005:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_6872\2442957368.py:4: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns)).reset_index()

2023-05-07 16:56:36,360:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_6872\2011794475.py:4: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns)).reset_index()

2023-05-07 16:56:56,425:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_6872\4010879482.py:6: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns)).reset_index()

2023-05-07 16:57:14,753:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_6872\597040046.py:6: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns)).reset_index()

2023-05-07 16:57:24,496:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_6872\2225307180.py:6: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns)).reset_index()

2023-05-07 16:59:05,784:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_6872\3941451069.py:6: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns)).reset_index()

2023-05-07 16:59:40,952:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_6872\1158391021.py:6: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns))

2023-05-07 17:02:16,556:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_6872\446794753.py:6: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1]))

2023-05-07 17:05:14,265:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_6872\52036101.py:6: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns), ignore_index=True)

2023-05-07 17:05:47,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 17:05:47,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 17:05:47,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 17:05:47,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 17:05:47,667:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-07 17:05:50,211:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\1051556977.py:6: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns), ignore_index=True)

2023-05-07 17:06:43,737:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\2502045672.py:6: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns), ignore_index=True)

2023-05-07 17:06:48,032:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\928481629.py:6: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns), ignore_index=True)

2023-05-07 17:07:00,484:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\2692607167.py:7: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns), ignore_index=True)

2023-05-07 17:07:40,002:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\3266270233.py:7: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(data.iloc[1], ignore_index=True)

2023-05-07 17:07:47,563:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\3411217107.py:7: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(data.iloc[1], ignore_index=True)

2023-05-07 17:08:43,579:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\3411217107.py:7: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(data.iloc[1], ignore_index=True)

2023-05-07 17:09:17,961:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\3411217107.py:7: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(data.iloc[1], ignore_index=True)

2023-05-07 17:12:46,653:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\3230560052.py:3: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  data = data.append(data.iloc[1], ignore_index=True)

2023-05-07 17:14:22,391:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\3230560052.py:3: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  data = data.append(data.iloc[1], ignore_index=True)

2023-05-07 17:14:58,946:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\4153447676.py:3: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  data = data.append(data.iloc[1], ignore_index=True)

2023-05-07 17:15:06,232:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\4153447676.py:3: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  data = data.append(data.iloc[1], ignore_index=True)

2023-05-07 17:15:31,311:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\4153447676.py:3: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  data = data.append(data.iloc[1], ignore_index=True)

2023-05-07 22:33:15,642:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 22:33:15,674:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 22:33:15,674:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 22:33:15,674:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 22:33:17,124:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-07 22:43:13,500:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\3248391516.py:2: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
  print(data.iloc[:1].to_records().tostring())

2023-05-07 22:43:55,605:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\690130754.py:2: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
  print(data.iloc[:1].to_records().tostring().decode())

2023-05-07 22:50:10,815:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\3088601578.py:3: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
  s = data.iloc[:1].to_records().tostring()

2023-05-07 22:50:52,558:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\1251662983.py:3: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
  s = data.iloc[:1].to_records().tostring()

2023-05-07 22:56:03,170:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\2405273034.py:2: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
  s = data.iloc[:1].to_records().tostring()

2023-05-07 22:56:36,216:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\1511409923.py:2: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
  s = data.iloc[:1].to_records().tostring()

2023-05-07 22:56:36,221:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\1511409923.py:5: DeprecationWarning: The binary mode of fromstring is deprecated, as it behaves surprisingly on unicode inputs. Use frombuffer instead
  print(np.fromstring(s, data.to_records().dtype))

2023-05-07 22:56:50,600:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\955758522.py:2: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
  s = data.iloc[:1].to_records().tostring()

2023-05-07 22:56:50,605:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\955758522.py:5: DeprecationWarning: The binary mode of fromstring is deprecated, as it behaves surprisingly on unicode inputs. Use frombuffer instead
  print(np.fromstring(s, data.iloc[:1].to_records().dtype))

2023-05-07 22:58:12,773:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\428157604.py:2: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
  s = data.iloc[:1].to_records().tostring()

2023-05-07 22:58:12,774:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\428157604.py:5: DeprecationWarning: The binary mode of fromstring is deprecated, as it behaves surprisingly on unicode inputs. Use frombuffer instead
  s2 = np.fromstring(s)

2023-05-07 22:58:32,196:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\2923092441.py:2: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
  s = data.iloc[:1].to_records().tostring()

2023-05-07 22:58:32,196:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\2923092441.py:5: DeprecationWarning: The binary mode of fromstring is deprecated, as it behaves surprisingly on unicode inputs. Use frombuffer instead
  s2 = np.fromstring(s)

2023-05-07 22:59:37,595:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\2304233525.py:2: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
  s = data.iloc[:1].to_records().tostring()

2023-05-07 22:59:37,596:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\2304233525.py:5: DeprecationWarning: The binary mode of fromstring is deprecated, as it behaves surprisingly on unicode inputs. Use frombuffer instead
  s2 = np.fromstring(s)

2023-05-07 23:18:54,974:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\3392707102.py:5: DeprecationWarning: The binary mode of fromstring is deprecated, as it behaves surprisingly on unicode inputs. Use frombuffer instead
  s2 = np.fromstring(s)

2023-05-07 23:41:51,813:INFO:Initializing load_model()
2023-05-07 23:41:51,813:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-07 23:41:53,126:INFO:Initializing predict_model()
2023-05-07 23:41:53,126:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001BBD44A9C60>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-07 23:41:53,126:INFO:Set up data.
2023-05-08 15:39:40,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:39:40,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:39:40,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:39:40,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:39:41,332:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-08 15:48:08,416:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:48:08,416:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:48:08,416:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:48:08,416:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:48:08,973:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-08 15:49:26,205:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:49:26,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:49:26,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:49:26,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:49:26,744:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-08 15:49:28,534:INFO:Initializing load_model()
2023-05-08 15:49:28,535:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 15:49:46,526:INFO:Initializing load_model()
2023-05-08 15:49:46,526:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 15:49:46,583:INFO:Initializing predict_model()
2023-05-08 15:49:46,583:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000163598720E0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:49:46,583:INFO:Set up data.
2023-05-08 15:51:13,476:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:51:13,476:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:51:13,476:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:51:13,476:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:51:14,018:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-08 15:51:21,687:INFO:Initializing load_model()
2023-05-08 15:51:21,687:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 15:51:32,668:INFO:Initializing load_model()
2023-05-08 15:51:32,668:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 15:51:32,725:INFO:Initializing predict_model()
2023-05-08 15:51:32,725:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000233C211E140>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:51:32,725:INFO:Set up data.
2023-05-08 15:52:39,285:INFO:Initializing load_model()
2023-05-08 15:52:39,285:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 15:52:39,337:INFO:Initializing predict_model()
2023-05-08 15:52:39,337:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000233C211D210>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:52:39,337:INFO:Set up data.
2023-05-08 15:53:47,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:53:47,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:53:47,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:53:47,238:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:53:47,783:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-08 15:53:51,713:INFO:Initializing load_model()
2023-05-08 15:53:51,713:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 15:54:10,957:INFO:Initializing load_model()
2023-05-08 15:54:10,958:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 15:54:11,008:INFO:Initializing predict_model()
2023-05-08 15:54:11,008:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3E140>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:11,008:INFO:Set up data.
2023-05-08 15:54:12,174:INFO:Initializing predict_model()
2023-05-08 15:54:12,174:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3E470>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:12,174:INFO:Set up data.
2023-05-08 15:54:13,355:INFO:Initializing predict_model()
2023-05-08 15:54:13,355:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3E140>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:13,355:INFO:Set up data.
2023-05-08 15:54:14,542:INFO:Initializing predict_model()
2023-05-08 15:54:14,542:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3E7A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:14,542:INFO:Set up data.
2023-05-08 15:54:15,726:INFO:Initializing predict_model()
2023-05-08 15:54:15,726:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3DAB0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:15,726:INFO:Set up data.
2023-05-08 15:54:17,078:INFO:Initializing predict_model()
2023-05-08 15:54:17,078:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3CAC0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:17,078:INFO:Set up data.
2023-05-08 15:54:19,094:INFO:Initializing predict_model()
2023-05-08 15:54:19,094:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3CD30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:19,095:INFO:Set up data.
2023-05-08 15:54:21,100:INFO:Initializing predict_model()
2023-05-08 15:54:21,100:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DEA8CF9D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:21,100:INFO:Set up data.
2023-05-08 15:54:23,112:INFO:Initializing predict_model()
2023-05-08 15:54:23,112:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3E740>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:23,112:INFO:Set up data.
2023-05-08 15:54:25,160:INFO:Initializing predict_model()
2023-05-08 15:54:25,160:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3C310>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:25,160:INFO:Set up data.
2023-05-08 15:54:27,161:INFO:Initializing predict_model()
2023-05-08 15:54:27,161:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DEA8CF8B0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:27,161:INFO:Set up data.
2023-05-08 15:54:29,184:INFO:Initializing predict_model()
2023-05-08 15:54:29,184:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3DBD0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:29,184:INFO:Set up data.
2023-05-08 15:54:31,213:INFO:Initializing predict_model()
2023-05-08 15:54:31,213:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3D9C0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:31,213:INFO:Set up data.
2023-05-08 15:54:33,253:INFO:Initializing predict_model()
2023-05-08 15:54:33,253:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3D330>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:33,253:INFO:Set up data.
2023-05-08 15:54:35,263:INFO:Initializing predict_model()
2023-05-08 15:54:35,263:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DEA8CD780>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:35,263:INFO:Set up data.
2023-05-08 15:54:37,261:INFO:Initializing predict_model()
2023-05-08 15:54:37,262:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3CD30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:37,262:INFO:Set up data.
2023-05-08 15:57:19,377:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:57:19,377:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:57:19,377:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:57:19,377:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:57:19,905:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-08 15:57:21,938:INFO:Initializing load_model()
2023-05-08 15:57:21,938:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 15:57:22,297:INFO:Initializing predict_model()
2023-05-08 15:57:22,298:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533E7DF00>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:22,298:INFO:Set up data.
2023-05-08 15:57:23,480:INFO:Initializing predict_model()
2023-05-08 15:57:23,480:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533E7E470>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:23,480:INFO:Set up data.
2023-05-08 15:57:24,646:INFO:Initializing predict_model()
2023-05-08 15:57:24,646:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533E7C7C0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:24,646:INFO:Set up data.
2023-05-08 15:57:25,819:INFO:Initializing predict_model()
2023-05-08 15:57:25,819:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533FC1150>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:25,819:INFO:Set up data.
2023-05-08 15:57:26,975:INFO:Initializing predict_model()
2023-05-08 15:57:26,975:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533E7DF30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:26,975:INFO:Set up data.
2023-05-08 15:57:28,140:INFO:Initializing predict_model()
2023-05-08 15:57:28,140:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533FC1150>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:28,140:INFO:Set up data.
2023-05-08 15:57:29,296:INFO:Initializing predict_model()
2023-05-08 15:57:29,297:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533E7CD30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:29,297:INFO:Set up data.
2023-05-08 15:57:30,450:INFO:Initializing predict_model()
2023-05-08 15:57:30,450:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533FC1150>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:30,451:INFO:Set up data.
2023-05-08 15:57:31,612:INFO:Initializing predict_model()
2023-05-08 15:57:31,612:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533E7D9C0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:31,613:INFO:Set up data.
2023-05-08 15:57:32,766:INFO:Initializing predict_model()
2023-05-08 15:57:32,766:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533FC1150>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:32,766:INFO:Set up data.
2023-05-08 15:57:33,949:INFO:Initializing predict_model()
2023-05-08 15:57:33,949:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533E7E860>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:33,949:INFO:Set up data.
2023-05-08 15:57:35,108:INFO:Initializing predict_model()
2023-05-08 15:57:35,108:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533FC1150>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:35,108:INFO:Set up data.
2023-05-08 15:57:36,294:INFO:Initializing predict_model()
2023-05-08 15:57:36,294:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533E7CD30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:36,294:INFO:Set up data.
2023-05-08 15:57:37,498:INFO:Initializing predict_model()
2023-05-08 15:57:37,498:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533FC1150>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:37,498:INFO:Set up data.
2023-05-08 15:57:38,658:INFO:Initializing predict_model()
2023-05-08 15:57:38,658:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533E7D9C0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:38,658:INFO:Set up data.
2023-05-08 16:12:32,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:12:32,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:12:32,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:12:32,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:12:33,033:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-08 16:12:33,847:INFO:Initializing load_model()
2023-05-08 16:12:33,847:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 16:12:34,205:INFO:Initializing predict_model()
2023-05-08 16:12:34,205:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002598F2DDED0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:12:34,205:INFO:Set up data.
2023-05-08 16:12:35,382:INFO:Initializing predict_model()
2023-05-08 16:12:35,382:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002598F2DE440>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:12:35,382:INFO:Set up data.
2023-05-08 16:12:36,545:INFO:Initializing predict_model()
2023-05-08 16:12:36,545:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002598F2DC790>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:12:36,545:INFO:Set up data.
2023-05-08 16:12:37,706:INFO:Initializing predict_model()
2023-05-08 16:12:37,706:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002598F421120>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:12:37,706:INFO:Set up data.
2023-05-08 16:12:38,864:INFO:Initializing predict_model()
2023-05-08 16:12:38,864:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002598F2DDF00>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:12:38,865:INFO:Set up data.
2023-05-08 16:13:03,567:INFO:Initializing load_model()
2023-05-08 16:13:03,567:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 16:13:03,621:INFO:Initializing predict_model()
2023-05-08 16:13:03,621:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002598F2DE380>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:13:03,621:INFO:Set up data.
2023-05-08 16:13:04,784:INFO:Initializing predict_model()
2023-05-08 16:13:04,784:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002598F2DDF60>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:13:04,784:INFO:Set up data.
2023-05-08 16:13:05,947:INFO:Initializing predict_model()
2023-05-08 16:13:05,947:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002598F2DDF30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:13:05,947:INFO:Set up data.
2023-05-08 16:13:07,112:INFO:Initializing predict_model()
2023-05-08 16:13:07,112:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002598F2DC2B0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:13:07,112:INFO:Set up data.
2023-05-08 16:13:08,295:INFO:Initializing predict_model()
2023-05-08 16:13:08,295:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002598F2DE110>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:13:08,295:INFO:Set up data.
2023-05-08 16:27:13,823:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:27:13,824:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:27:13,824:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:27:13,824:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:27:14,353:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-08 16:36:43,122:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:36:43,122:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:36:43,122:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:36:43,122:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:36:43,797:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-08 16:41:59,792:INFO:Initializing load_model()
2023-05-08 16:41:59,793:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 16:42:00,152:INFO:Initializing predict_model()
2023-05-08 16:42:00,152:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000019F73AB1E70>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:42:00,152:INFO:Set up data.
2023-05-08 16:43:48,020:INFO:Initializing load_model()
2023-05-08 16:43:48,020:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 16:43:48,074:INFO:Initializing predict_model()
2023-05-08 16:43:48,074:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000019F73AB2590>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:43:48,074:INFO:Set up data.
2023-05-08 16:44:17,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:44:17,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:44:17,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:44:17,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:44:17,912:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-08 16:44:21,864:INFO:Initializing load_model()
2023-05-08 16:44:21,864:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 16:44:22,210:INFO:Initializing predict_model()
2023-05-08 16:44:22,211:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000246C3BF1210>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:44:22,211:INFO:Set up data.
2023-05-08 16:44:33,969:INFO:Initializing load_model()
2023-05-08 16:44:33,969:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 16:44:34,027:INFO:Initializing predict_model()
2023-05-08 16:44:34,027:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000246C3AAE740>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:44:34,027:INFO:Set up data.
2023-05-08 16:44:35,240:INFO:Initializing predict_model()
2023-05-08 16:44:35,241:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000246C3AAE7D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:44:35,241:INFO:Set up data.
2023-05-08 16:44:36,430:INFO:Initializing predict_model()
2023-05-08 16:44:36,430:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000246C3AAE740>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:44:36,430:INFO:Set up data.
2023-05-08 16:44:37,611:INFO:Initializing predict_model()
2023-05-08 16:44:37,611:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000246C3AAE7D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:44:37,611:INFO:Set up data.
2023-05-08 16:44:38,780:INFO:Initializing predict_model()
2023-05-08 16:44:38,780:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000246C4543520>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:44:38,780:INFO:Set up data.
2023-05-08 16:44:39,951:INFO:Initializing predict_model()
2023-05-08 16:44:39,951:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000246C3AAD9F0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:44:39,951:INFO:Set up data.
2023-05-09 10:51:01,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-09 10:51:02,000:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-09 10:51:02,000:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-09 10:51:02,000:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-09 10:51:03,712:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-09 11:16:08,226:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-09 11:16:08,227:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-09 11:16:08,227:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-09 11:16:08,227:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-09 11:16:09,208:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-09 11:16:45,143:INFO:Initializing load_model()
2023-05-09 11:16:45,144:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-09 11:24:13,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-09 11:24:13,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-09 11:24:13,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-09 11:24:13,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-09 11:24:14,278:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-09 11:24:20,927:INFO:Initializing load_model()
2023-05-09 11:24:20,927:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-10 16:12:27,040:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-10 16:12:27,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-10 16:12:27,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-10 16:12:27,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-10 16:12:28,675:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-10 16:13:08,536:INFO:Initializing load_model()
2023-05-10 16:13:08,536:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-10 23:09:15,324:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-10 23:09:15,343:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-10 23:09:15,343:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-10 23:09:15,343:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-10 23:09:17,181:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-10 23:09:38,892:INFO:Initializing load_model()
2023-05-10 23:09:38,893:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-10 23:09:40,117:INFO:Initializing predict_model()
2023-05-10 23:09:40,117:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001BE16FB5090>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-10 23:09:40,130:INFO:Set up data.
2023-05-10 23:09:41,309:INFO:Initializing predict_model()
2023-05-10 23:09:41,309:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001BE16FB4550>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-10 23:09:41,310:INFO:Set up data.
2023-05-10 23:09:42,465:INFO:Initializing predict_model()
2023-05-10 23:09:42,465:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001BE16FB54B0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-10 23:09:42,465:INFO:Set up data.
2023-05-10 23:09:43,626:INFO:Initializing predict_model()
2023-05-10 23:09:43,626:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001BE170F5360>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-10 23:09:43,626:INFO:Set up data.
2023-05-10 23:09:44,784:INFO:Initializing predict_model()
2023-05-10 23:09:44,784:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001BE16F5FC40>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-10 23:09:44,784:INFO:Set up data.
2023-05-10 23:13:43,543:INFO:Initializing load_model()
2023-05-10 23:13:43,544:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-10 23:13:43,600:INFO:Initializing predict_model()
2023-05-10 23:13:43,600:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001BE16FB4790>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-10 23:13:43,601:INFO:Set up data.
2023-05-12 13:31:28,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-12 13:31:28,834:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-12 13:31:28,834:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-12 13:31:28,838:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-12 13:31:30,722:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-12 13:31:31,769:INFO:PyCaret AnomalyExperiment
2023-05-12 13:31:31,769:INFO:Logging name: anomaly-default-name
2023-05-12 13:31:31,769:INFO:ML Usecase: MLUsecase.ANOMALY
2023-05-12 13:31:31,769:INFO:version 3.0.0
2023-05-12 13:31:31,769:INFO:Initializing setup()
2023-05-12 13:31:31,769:INFO:self.USI: 5204
2023-05-12 13:31:31,769:INFO:self._variable_keys: {'_ml_usecase', 'exp_id', 'X', 'n_jobs_param', '_available_plots', 'log_plots_param', 'exp_name_log', 'USI', 'data', 'memory', 'seed', 'logging_param', 'idx', 'pipeline', 'gpu_param', 'html_param', 'gpu_n_jobs_param'}
2023-05-12 13:31:31,769:INFO:Checking environment
2023-05-12 13:31:31,770:INFO:python_version: 3.8.10
2023-05-12 13:31:31,770:INFO:python_build: ('default', 'Mar 13 2023 10:26:41')
2023-05-12 13:31:31,770:INFO:machine: x86_64
2023-05-12 13:31:31,770:INFO:platform: Linux-5.15.0-69-generic-x86_64-with-glibc2.29
2023-05-12 13:31:31,770:INFO:Memory: svmem(total=8373764096, available=4318789632, percent=48.4, used=3638833152, free=461692928, active=2095529984, inactive=4660359168, buffers=165789696, cached=4107448320, shared=107376640, slab=570654720)
2023-05-12 13:31:31,808:INFO:Physical Core: 2
2023-05-12 13:31:31,814:INFO:Logical Core: 2
2023-05-12 13:31:31,815:INFO:Checking libraries
2023-05-12 13:31:31,816:INFO:System:
2023-05-12 13:31:31,816:INFO:    python: 3.8.10 (default, Mar 13 2023, 10:26:41)  [GCC 9.4.0]
2023-05-12 13:31:31,817:INFO:executable: /bin/python3
2023-05-12 13:31:31,821:INFO:   machine: Linux-5.15.0-69-generic-x86_64-with-glibc2.29
2023-05-12 13:31:31,823:INFO:PyCaret required dependencies:
2023-05-12 13:31:31,823:INFO:                 pip: 20.0.2
2023-05-12 13:31:31,826:INFO:          setuptools: 45.2.0
2023-05-12 13:31:31,827:INFO:             pycaret: 3.0.0
2023-05-12 13:31:31,827:INFO:             IPython: 8.12.2
2023-05-12 13:31:31,828:INFO:          ipywidgets: 8.0.6
2023-05-12 13:31:31,832:INFO:                tqdm: 4.65.0
2023-05-12 13:31:31,834:INFO:               numpy: 1.24.3
2023-05-12 13:31:31,835:INFO:              pandas: 1.5.3
2023-05-12 13:31:31,836:INFO:              jinja2: 3.1.2
2023-05-12 13:31:31,837:INFO:               scipy: 1.10.1
2023-05-12 13:31:31,837:INFO:              joblib: 1.2.0
2023-05-12 13:31:31,838:INFO:             sklearn: 1.2.2
2023-05-12 13:31:31,839:INFO:                pyod: 1.0.9
2023-05-12 13:31:31,839:INFO:            imblearn: 0.10.1
2023-05-12 13:31:31,840:INFO:   category_encoders: 2.6.0
2023-05-12 13:31:31,840:INFO:            lightgbm: 3.3.5
2023-05-12 13:31:31,842:INFO:               numba: 0.57.0
2023-05-12 13:31:31,845:INFO:            requests: 2.22.0
2023-05-12 13:31:31,845:INFO:          matplotlib: 3.7.1
2023-05-12 13:31:31,846:INFO:          scikitplot: 0.3.7
2023-05-12 13:31:31,846:INFO:         yellowbrick: 1.5
2023-05-12 13:31:31,847:INFO:              plotly: 5.14.1
2023-05-12 13:31:31,847:INFO:             kaleido: 0.2.1
2023-05-12 13:31:31,848:INFO:         statsmodels: 0.14.0
2023-05-12 13:31:31,850:INFO:              sktime: 0.18.0
2023-05-12 13:31:31,850:INFO:               tbats: 1.1.3
2023-05-12 13:31:31,851:INFO:            pmdarima: 2.0.3
2023-05-12 13:31:31,852:INFO:              psutil: 5.9.5
2023-05-12 13:31:31,852:INFO:PyCaret optional dependencies:
2023-05-12 13:31:32,078:INFO:                shap: Not installed
2023-05-12 13:31:32,078:INFO:           interpret: Not installed
2023-05-12 13:31:32,078:INFO:                umap: Not installed
2023-05-12 13:31:32,078:INFO:    pandas_profiling: Not installed
2023-05-12 13:31:32,078:INFO:  explainerdashboard: Not installed
2023-05-12 13:31:32,078:INFO:             autoviz: Not installed
2023-05-12 13:31:32,078:INFO:           fairlearn: Not installed
2023-05-12 13:31:32,078:INFO:             xgboost: Not installed
2023-05-12 13:31:32,078:INFO:            catboost: Not installed
2023-05-12 13:31:32,078:INFO:              kmodes: Not installed
2023-05-12 13:31:32,078:INFO:             mlxtend: Not installed
2023-05-12 13:31:32,078:INFO:       statsforecast: Not installed
2023-05-12 13:31:32,079:INFO:        tune_sklearn: Not installed
2023-05-12 13:31:32,079:INFO:                 ray: Not installed
2023-05-12 13:31:32,079:INFO:            hyperopt: Not installed
2023-05-12 13:31:32,079:INFO:              optuna: Not installed
2023-05-12 13:31:32,079:INFO:               skopt: Not installed
2023-05-12 13:31:32,079:INFO:              mlflow: Not installed
2023-05-12 13:31:32,079:INFO:              gradio: Not installed
2023-05-12 13:31:32,079:INFO:             fastapi: Not installed
2023-05-12 13:31:32,079:INFO:             uvicorn: Not installed
2023-05-12 13:31:32,079:INFO:              m2cgen: Not installed
2023-05-12 13:31:32,079:INFO:           evidently: Not installed
2023-05-12 13:31:32,079:INFO:               fugue: Not installed
2023-05-12 13:31:32,079:INFO:           streamlit: Not installed
2023-05-12 13:31:32,079:INFO:             prophet: Not installed
2023-05-12 13:31:32,080:INFO:None
2023-05-12 13:31:32,080:INFO:Set up data.
2023-05-12 13:31:32,123:INFO:Set up index.
2023-05-12 13:31:32,124:INFO:Assigning column types.
2023-05-12 13:31:32,130:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2023-05-12 13:31:33,402:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2023-05-12 13:31:33,406:INFO:Preparing preprocessing pipeline...
2023-05-12 13:31:33,407:INFO:Set up simple imputation.
2023-05-12 13:31:33,433:INFO:Set up encoding of ordinal features.
2023-05-12 13:31:33,438:INFO:Set up encoding of categorical features.
2023-05-12 13:31:33,439:INFO:Set up feature normalization.
2023-05-12 13:31:33,800:INFO:Finished creating preprocessing pipeline.
2023-05-12 13:31:33,841:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                                                               mapping=[{'col': 'day_name',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Monday       0
Tuesday      1
Wednesday    2
Thursday     3
Friday       4
Saturday     5
Sunday       6
NaN         -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler()))])
2023-05-12 13:31:33,841:INFO:Creating final display dataframe.
2023-05-12 13:31:33,979:INFO:Setup _display_container:                  Description                 Value
0                 Session id                    42
1        Original data shape            (3672, 57)
2     Transformed data shape            (3672, 84)
3           Ordinal features                     1
4           Numeric features                     1
5       Categorical features                     1
6                 Preprocess                  True
7            Imputation type                simple
8         Numeric imputation                  mean
9     Categorical imputation                  mode
10  Maximum one-hot encoding                    -1
11           Encoding method                  None
12                 Normalize                  True
13          Normalize method                minmax
14                  CPU Jobs                    -1
15                   Use GPU                 False
16            Log Experiment                 False
17           Experiment Name  anomaly-default-name
18                       USI                  5204
2023-05-12 13:31:34,004:INFO:setup() successfully completed in 2.28s...............
2023-05-12 13:31:34,101:INFO:Initializing get_config()
2023-05-12 13:31:34,108:INFO:get_config(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f49b085b250>, variable=X)
2023-05-12 13:31:34,150:INFO:Variable:  returned as                             sensor_00    sensor_01    sensor_02    sensor_03  \
timestamp                                                                      
2018-04-01 00:00:00+00:00  147.270370  2913.367920  3188.541504  2773.524170   
2018-04-01 01:00:00+00:00  147.254639  2880.946045  3186.414795  2756.119629   
2018-04-01 02:00:00+00:00  147.217255  2939.583252  3180.642334  2735.590088   
2018-04-01 03:00:00+00:00  147.274307  2919.270752  3178.559082  2713.107422   
2018-04-01 04:00:00+00:00  147.227097  2899.609375  3172.092041  2707.855713   
...                               ...          ...          ...          ...   
2018-08-31 19:00:00+00:00  144.168457  2960.329834  3059.548584  2606.076172   
2018-08-31 20:00:00+00:00  144.160599  2926.388672  3048.871338  2613.020752   
2018-08-31 21:00:00+00:00  144.158630  2900.217041  3038.194580  2597.482666   
2018-08-31 22:00:00+00:00  144.175354  2862.586670  3035.937500  2580.815918   
2018-08-31 23:00:00+00:00  144.142883  2865.234375  3031.770752  2584.895752   

                              sensor_04    sensor_05   sensor_06    sensor_07  \
timestamp                                                                       
2018-04-01 00:00:00+00:00  38047.222656  4544.186523  801.830078   969.726440   
2018-04-01 01:00:00+00:00  38054.167969  4473.953125  815.581482   969.400879   
2018-04-01 02:00:00+00:00  38065.625000  4501.012695  815.798523   969.646790   
2018-04-01 03:00:00+00:00  38005.019531  4395.382812  816.261475   969.559998   
2018-04-01 04:00:00+00:00  38099.187500  4208.990234  815.111328   969.089844   
...                                 ...          ...         ...          ...   
2018-08-31 19:00:00+00:00  37942.824219  4758.575195  907.624390  1000.426880   
2018-08-31 20:00:00+00:00  37934.257812  3869.074463  906.192078   999.898865   
2018-08-31 21:00:00+00:00  37904.906250  4151.589355  906.597229   999.804810   
2018-08-31 22:00:00+00:00  37930.785156  4406.478027  906.184875   999.631165   
2018-08-31 23:00:00+00:00  37914.207031  4092.699707  907.117981   999.153748   

                            sensor_08   sensor_09  ...     sensor_48  \
timestamp                                          ...                 
2018-04-01 00:00:00+00:00  942.151367  905.193909  ...  11847.511719   
2018-04-01 01:00:00+00:00  942.766235  905.541138  ...  10841.146484   
2018-04-01 02:00:00+00:00  940.067993  905.533875  ...  10416.956055   
2018-04-01 03:00:00+00:00  941.319458  905.490479  ...  12263.310547   
2018-04-01 04:00:00+00:00  942.129700  905.721924  ...  12785.011719   
...                               ...         ...  ...           ...   
2018-08-31 19:00:00+00:00  939.756958  905.852173  ...  12324.653320   
2018-08-31 20:00:00+00:00  940.719055  904.882874  ...  17492.187500   
2018-08-31 21:00:00+00:00  940.451416  905.859375  ...  21911.458984   
2018-08-31 22:00:00+00:00  940.039062  905.374756  ...  13465.277344   
2018-08-31 23:00:00+00:00  940.972290  905.664062  ...  16418.982422   

                             sensor_49     sensor_51  Operation  day  \
timestamp                                                              
2018-04-01 00:00:00+00:00  4690.104492  12601.851562          0    1   
2018-04-01 01:00:00+00:00  4403.066895  12224.247070          0    1   
2018-04-01 02:00:00+00:00  4550.925781  12599.826172          0    1   
2018-04-01 03:00:00+00:00  6278.356445  13360.821289          0    1   
2018-04-01 04:00:00+00:00  6850.694336  12698.495117          0    1   
...                                ...           ...        ...  ...   
2018-08-31 19:00:00+00:00  5211.516113  11815.393555          0   31   
2018-08-31 20:00:00+00:00  7658.564453  14592.881836          0   31   
2018-08-31 21:00:00+00:00  6587.673828  13746.817383          0   31   
2018-08-31 22:00:00+00:00  6186.342773  12209.780273          0   31   
2018-08-31 23:00:00+00:00  8093.171875  13631.944336          0   31   

                           day_name  day_of_year  week_of_year  hour  \
timestamp                                                              
2018-04-01 00:00:00+00:00    Sunday           91            13     0   
2018-04-01 01:00:00+00:00    Sunday           91            13     1   
2018-04-01 02:00:00+00:00    Sunday           91            13     2   
2018-04-01 03:00:00+00:00    Sunday           91            13     3   
2018-04-01 04:00:00+00:00    Sunday           91            13     4   
...                             ...          ...           ...   ...   
2018-08-31 19:00:00+00:00    Friday          243            35    19   
2018-08-31 20:00:00+00:00    Friday          243            35    20   
2018-08-31 21:00:00+00:00    Friday          243            35    21   
2018-08-31 22:00:00+00:00    Friday          243            35    22   
2018-08-31 23:00:00+00:00    Friday          243            35    23   

                           is_weekday  
timestamp                              
2018-04-01 00:00:00+00:00           7  
2018-04-01 01:00:00+00:00           7  
2018-04-01 02:00:00+00:00           7  
2018-04-01 03:00:00+00:00           7  
2018-04-01 04:00:00+00:00           7  
...                               ...  
2018-08-31 19:00:00+00:00           5  
2018-08-31 20:00:00+00:00           5  
2018-08-31 21:00:00+00:00           5  
2018-08-31 22:00:00+00:00           5  
2018-08-31 23:00:00+00:00           5  

[3672 rows x 57 columns]
2023-05-12 13:31:34,151:INFO:get_config() successfully completed......................................
2023-05-12 13:31:34,289:INFO:gpu_param set to False
2023-05-12 13:31:34,572:INFO:Initializing create_model()
2023-05-12 13:31:34,576:INFO:create_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f49b085b250>, estimator=knn, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2023-05-12 13:31:34,577:INFO:Checking exceptions
2023-05-12 13:31:34,828:INFO:Importing untrained model
2023-05-12 13:31:34,836:INFO:K-Nearest Neighbors Detector Imported successfully
2023-05-12 13:31:34,843:INFO:Fitting Model
2023-05-12 13:31:35,474:INFO:KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0)
2023-05-12 13:31:35,475:INFO:create_models() successfully completed......................................
2023-05-12 13:31:35,511:INFO:Uploading results into container
2023-05-12 13:31:35,511:INFO:Uploading model into container now
2023-05-12 13:31:35,517:INFO:_master_model_container: 1
2023-05-12 13:31:35,517:INFO:_display_container: 1
2023-05-12 13:31:35,520:INFO:KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0)
2023-05-12 13:31:35,520:INFO:create_model() successfully completed......................................
2023-05-12 13:31:36,309:INFO:Initializing plot_model()
2023-05-12 13:31:36,310:INFO:plot_model(plot=tsne, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f49b085b250>, system=True)
2023-05-12 13:31:36,311:INFO:Checking exceptions
2023-05-12 13:31:36,325:INFO:Preloading libraries
2023-05-12 13:31:36,355:INFO:Copying training dataset
2023-05-12 13:31:36,356:INFO:Plot type: tsne
2023-05-12 13:31:36,358:INFO:SubProcess assign_model() called ==================================
2023-05-12 13:31:36,365:INFO:Initializing assign_model()
2023-05-12 13:31:36,365:INFO:assign_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f49b085b250>, model=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), transformation=True, score=False, verbose=False)
2023-05-12 13:31:36,365:INFO:Checking exceptions
2023-05-12 13:31:36,366:INFO:Determining Trained Model
2023-05-12 13:31:36,366:INFO:Trained Model : K-Nearest Neighbors Detector
2023-05-12 13:31:36,366:INFO:Copying data
2023-05-12 13:31:36,391:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2023-05-12 13:31:36,394:INFO:(3672, 85)
2023-05-12 13:31:36,395:INFO:assign_model() successfully completed......................................
2023-05-12 13:31:36,405:INFO:SubProcess assign_model() end ==================================
2023-05-12 13:31:36,411:INFO:Getting dummies to cast categorical variables
2023-05-12 13:31:36,411:INFO:Fitting TSNE()
2023-05-12 13:32:24,607:INFO:Rendering Visual
2023-05-12 13:32:25,734:INFO:Visual Rendered Successfully
2023-05-12 13:32:25,921:INFO:plot_model() successfully completed......................................
2023-05-12 13:32:26,011:INFO:Initializing predict_model()
2023-05-12 13:32:26,016:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f49b085b250>, estimator=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), ml_usecase=None)
2023-05-12 13:32:30,934:INFO:Initializing save_model()
2023-05-12 13:32:30,937:INFO:save_model(model=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), model_name=knn_3.8, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                                                               mapping=[{'col': 'day_name',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Monday       0
Tuesday      1
Wednesday    2
Thursday     3
Friday       4
Saturday     5
Sunday       6
NaN         -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler()))]), verbose=True, use_case=MLUsecase.ANOMALY, kwargs={})
2023-05-12 13:32:30,937:INFO:Adding model into prep_pipe
2023-05-12 13:32:31,234:INFO:knn_3.8.pkl saved in current working directory
2023-05-12 13:32:31,357:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))])
2023-05-12 13:32:31,358:INFO:save_model() successfully completed......................................
2023-05-12 13:32:32,792:INFO:Initializing load_model()
2023-05-12 13:32:32,794:INFO:load_model(model_name=knn_3.8, platform=None, authentication=None, verbose=True)
2023-05-12 13:34:41,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-12 13:34:41,660:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-12 13:34:41,660:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-12 13:34:41,660:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-12 13:34:42,717:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-12 14:06:51,188:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-12 14:06:51,188:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-12 14:06:51,188:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-12 14:06:51,188:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-12 14:06:52,087:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-12 14:08:54,910:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-12 14:08:54,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-12 14:08:54,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-12 14:08:54,912:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-12 14:08:55,645:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-12 15:02:31,748:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-12 15:02:31,749:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-12 15:02:31,749:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-12 15:02:31,750:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-12 15:02:32,750:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-13 08:28:26,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 08:28:26,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 08:28:26,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 08:28:26,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 08:28:27,012:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-13 08:51:53,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 08:51:53,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 08:51:53,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 08:51:53,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 08:51:53,232:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-13 08:51:58,939:INFO:Initializing load_model()
2023-05-13 08:51:58,939:INFO:load_model(model_name=knn_3.8, platform=None, authentication=None, verbose=True)
2023-05-13 08:51:59,116:WARNING:/home/mec/.local/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '20.0.2', 'setuptools': '45.2.0', 'pycaret': '3.0.0', 'IPython': '8.12.0', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.22.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.18.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.10', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '20.0.2', 'setuptools': '45.2.0', 'pycaret': '3.0.0', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.22.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.18.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.10', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-13 08:51:59,143:INFO:Initializing predict_model()
2023-05-13 08:51:59,143:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b65331e50>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:51:59,143:INFO:Set up data.
2023-05-13 08:52:00,233:INFO:Initializing predict_model()
2023-05-13 08:52:00,233:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b65331a00>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:52:00,233:INFO:Set up data.
2023-05-13 08:52:01,322:INFO:Initializing predict_model()
2023-05-13 08:52:01,322:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b70561d90>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:52:01,322:INFO:Set up data.
2023-05-13 08:52:02,409:INFO:Initializing predict_model()
2023-05-13 08:52:02,409:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b70561e80>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:52:02,409:INFO:Set up data.
2023-05-13 08:52:03,496:INFO:Initializing predict_model()
2023-05-13 08:52:03,496:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b65331e50>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:52:03,496:INFO:Set up data.
2023-05-13 08:52:04,584:INFO:Initializing predict_model()
2023-05-13 08:52:04,584:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b70561640>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:52:04,584:INFO:Set up data.
2023-05-13 08:52:05,672:INFO:Initializing predict_model()
2023-05-13 08:52:05,672:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b65331e20>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:52:05,672:INFO:Set up data.
2023-05-13 08:52:06,758:INFO:Initializing predict_model()
2023-05-13 08:52:06,758:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b65331eb0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:52:06,758:INFO:Set up data.
2023-05-13 08:52:07,845:INFO:Initializing predict_model()
2023-05-13 08:52:07,845:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b70550dc0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:52:07,845:INFO:Set up data.
2023-05-13 08:52:08,932:INFO:Initializing predict_model()
2023-05-13 08:52:08,932:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b705615e0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:52:08,932:INFO:Set up data.
2023-05-13 08:52:29,198:INFO:Initializing load_model()
2023-05-13 08:52:29,198:INFO:load_model(model_name=knn_3.8, platform=None, authentication=None, verbose=True)
2023-05-13 08:52:29,202:WARNING:/home/mec/.local/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '20.0.2', 'setuptools': '45.2.0', 'pycaret': '3.0.0', 'IPython': '8.12.0', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.22.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.18.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.10', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '20.0.2', 'setuptools': '45.2.0', 'pycaret': '3.0.0', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.22.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.18.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.10', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-13 08:52:29,226:INFO:Initializing predict_model()
2023-05-13 08:52:29,226:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b70561dc0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:52:29,226:INFO:Set up data.
2023-05-13 08:52:31,314:INFO:Initializing predict_model()
2023-05-13 08:52:31,314:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b65297370>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:52:31,314:INFO:Set up data.
2023-05-13 08:52:33,402:INFO:Initializing predict_model()
2023-05-13 08:52:33,402:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b7056b310>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:52:33,402:INFO:Set up data.
2023-05-13 08:52:35,490:INFO:Initializing predict_model()
2023-05-13 08:52:35,490:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b7056b430>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:52:35,490:INFO:Set up data.
2023-05-13 08:52:37,578:INFO:Initializing predict_model()
2023-05-13 08:52:37,578:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b7056b310>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:52:37,578:INFO:Set up data.
2023-05-13 08:53:06,160:INFO:Initializing load_model()
2023-05-13 08:53:06,160:INFO:load_model(model_name=knn_3.8, platform=None, authentication=None, verbose=True)
2023-05-13 08:53:06,164:WARNING:/home/mec/.local/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '20.0.2', 'setuptools': '45.2.0', 'pycaret': '3.0.0', 'IPython': '8.12.0', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.22.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.18.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.10', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '20.0.2', 'setuptools': '45.2.0', 'pycaret': '3.0.0', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.22.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.18.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.10', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-13 08:53:06,186:INFO:Initializing predict_model()
2023-05-13 08:53:06,186:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b652ce460>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:53:06,186:INFO:Set up data.
2023-05-13 08:53:07,189:INFO:Initializing predict_model()
2023-05-13 08:53:07,189:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b7056b1f0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:53:07,189:INFO:Set up data.
2023-05-13 08:53:08,192:INFO:Initializing predict_model()
2023-05-13 08:53:08,192:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b65331e80>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:53:08,192:INFO:Set up data.
2023-05-13 08:53:09,195:INFO:Initializing predict_model()
2023-05-13 08:53:09,195:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b7056b100>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:53:09,195:INFO:Set up data.
2023-05-13 08:53:10,198:INFO:Initializing predict_model()
2023-05-13 08:53:10,198:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b65331e80>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:53:10,198:INFO:Set up data.
2023-05-13 08:53:11,200:INFO:Initializing predict_model()
2023-05-13 08:53:11,201:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b7056b430>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:53:11,201:INFO:Set up data.
2023-05-13 08:53:12,203:INFO:Initializing predict_model()
2023-05-13 08:53:12,203:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b7056b310>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:53:12,203:INFO:Set up data.
2023-05-13 08:53:13,206:INFO:Initializing predict_model()
2023-05-13 08:53:13,206:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b705614c0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:53:13,206:INFO:Set up data.
2023-05-13 08:53:14,208:INFO:Initializing predict_model()
2023-05-13 08:53:14,208:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b652ce850>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:53:14,208:INFO:Set up data.
2023-05-13 08:53:15,210:INFO:Initializing predict_model()
2023-05-13 08:53:15,210:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b65331e80>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:53:15,210:INFO:Set up data.
2023-05-13 08:53:16,213:INFO:Initializing predict_model()
2023-05-13 08:53:16,213:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f5b652ce190>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:53:16,213:INFO:Set up data.
2023-05-13 08:59:13,071:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 08:59:13,071:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 08:59:13,071:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 08:59:13,071:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 08:59:13,248:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-13 08:59:20,173:INFO:Initializing load_model()
2023-05-13 08:59:20,174:INFO:load_model(model_name=knn_3.8, platform=None, authentication=None, verbose=True)
2023-05-13 08:59:20,335:WARNING:/home/mec/.local/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '20.0.2', 'setuptools': '45.2.0', 'pycaret': '3.0.0', 'IPython': '8.12.0', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.22.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.18.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.10', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '20.0.2', 'setuptools': '45.2.0', 'pycaret': '3.0.0', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.22.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.18.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.10', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-13 08:59:20,358:INFO:Initializing predict_model()
2023-05-13 08:59:20,358:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f90d3350460>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:59:20,358:INFO:Set up data.
2023-05-13 08:59:21,359:INFO:Initializing predict_model()
2023-05-13 08:59:21,359:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f90d338dc70>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:59:21,359:INFO:Set up data.
2023-05-13 08:59:22,360:INFO:Initializing predict_model()
2023-05-13 08:59:22,360:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f90d3348a60>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:59:22,360:INFO:Set up data.
2023-05-13 08:59:23,363:INFO:Initializing predict_model()
2023-05-13 08:59:23,363:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f90d338dc70>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:59:23,363:INFO:Set up data.
2023-05-13 08:59:24,364:INFO:Initializing predict_model()
2023-05-13 08:59:24,364:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f90d3348a60>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:59:24,364:INFO:Set up data.
2023-05-13 08:59:25,364:INFO:Initializing predict_model()
2023-05-13 08:59:25,364:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f90d3348a90>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:59:25,364:INFO:Set up data.
2023-05-13 08:59:26,365:INFO:Initializing predict_model()
2023-05-13 08:59:26,365:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f90d33484c0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:59:26,365:INFO:Set up data.
2023-05-13 08:59:27,367:INFO:Initializing predict_model()
2023-05-13 08:59:27,367:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f90d338dcd0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:59:27,367:INFO:Set up data.
2023-05-13 08:59:28,367:INFO:Initializing predict_model()
2023-05-13 08:59:28,368:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f90d338dc70>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:59:28,368:INFO:Set up data.
2023-05-13 08:59:29,369:INFO:Initializing predict_model()
2023-05-13 08:59:29,369:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f90d338dcd0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:59:29,369:INFO:Set up data.
2023-05-13 08:59:30,370:INFO:Initializing predict_model()
2023-05-13 08:59:30,371:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f90d3348a60>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-13 08:59:30,371:INFO:Set up data.
2023-05-19 19:50:31,592:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-19 19:50:31,592:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-19 19:50:31,592:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-19 19:50:31,592:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-19 19:50:31,770:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-19 19:51:26,470:INFO:Initializing load_model()
2023-05-19 19:51:26,470:INFO:load_model(model_name=knn_3.8, platform=None, authentication=None, verbose=True)
2023-05-19 19:51:26,615:WARNING:/home/mec/.local/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '20.0.2', 'setuptools': '45.2.0', 'pycaret': '3.0.0', 'IPython': '8.12.0', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.22.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.18.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.10', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '20.0.2', 'setuptools': '45.2.0', 'pycaret': '3.0.0', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.22.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.18.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.10', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-19 19:51:26,634:INFO:Initializing predict_model()
2023-05-19 19:51:26,634:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f9914bc2f10>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-19 19:51:26,634:INFO:Set up data.
2023-05-19 19:51:33,525:INFO:Initializing load_model()
2023-05-19 19:51:33,525:INFO:load_model(model_name=knn_3.8, platform=None, authentication=None, verbose=True)
2023-05-19 19:51:33,529:WARNING:/home/mec/.local/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '20.0.2', 'setuptools': '45.2.0', 'pycaret': '3.0.0', 'IPython': '8.12.0', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.22.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.18.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.10', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '20.0.2', 'setuptools': '45.2.0', 'pycaret': '3.0.0', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.22.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.18.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.10', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-19 19:51:33,546:INFO:Initializing predict_model()
2023-05-19 19:51:33,546:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f9914b124c0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-19 19:51:33,546:INFO:Set up data.
2023-05-19 19:51:34,548:INFO:Initializing predict_model()
2023-05-19 19:51:34,548:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f9915733df0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-19 19:51:34,548:INFO:Set up data.
2023-05-19 19:51:57,539:INFO:Initializing load_model()
2023-05-19 19:51:57,539:INFO:load_model(model_name=knn_3.8, platform=None, authentication=None, verbose=True)
2023-05-19 19:51:57,543:WARNING:/home/mec/.local/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '20.0.2', 'setuptools': '45.2.0', 'pycaret': '3.0.0', 'IPython': '8.12.0', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.22.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.18.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.10', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '20.0.2', 'setuptools': '45.2.0', 'pycaret': '3.0.0', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.22.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.18.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.10', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-19 19:51:57,559:INFO:Initializing predict_model()
2023-05-19 19:51:57,559:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7f9914b124f0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-19 19:51:57,559:INFO:Set up data.
2023-05-19 19:52:39,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-19 19:52:39,367:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-19 19:52:39,367:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-19 19:52:39,367:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-19 19:52:39,545:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-19 19:54:27,253:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-19 19:54:27,253:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-19 19:54:27,253:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-19 19:54:27,253:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-19 19:54:27,430:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-19 19:54:36,474:INFO:Initializing load_model()
2023-05-19 19:54:36,474:INFO:load_model(model_name=knn_3.8, platform=None, authentication=None, verbose=True)
2023-05-19 19:54:36,619:WARNING:/home/mec/.local/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '20.0.2', 'setuptools': '45.2.0', 'pycaret': '3.0.0', 'IPython': '8.12.0', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.22.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.18.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.10', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '20.0.2', 'setuptools': '45.2.0', 'pycaret': '3.0.0', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.22.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.18.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5'}, 'python': {'version': '3.8.10', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-19 19:54:36,637:INFO:Initializing predict_model()
2023-05-19 19:54:36,637:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7ff5c967bf10>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-19 19:54:36,637:INFO:Set up data.
2023-05-19 19:54:37,637:INFO:Initializing predict_model()
2023-05-19 19:54:37,637:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x7ff5c967bac0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day_name'],
                                    transformer=OrdinalEncod...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-19 19:54:37,637:INFO:Set up data.
