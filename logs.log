2023-05-05 21:31:19,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-05 21:31:19,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-05 21:31:19,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-05 21:31:19,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-05 21:31:20,743:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-05 21:31:42,803:INFO:Initializing load_model()
2023-05-05 21:31:42,803:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-05 21:32:15,274:INFO:Initializing predict_model()
2023-05-05 21:32:15,275:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000180CF5FBFD0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-05 21:32:15,275:INFO:Set up data.
2023-05-05 21:32:29,946:INFO:Initializing load_model()
2023-05-05 21:32:29,946:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-05 21:32:30,160:INFO:Initializing predict_model()
2023-05-05 21:32:30,160:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000180CF4DE4A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-05 21:32:30,160:INFO:Set up data.
2023-05-06 15:09:07,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:09:07,041:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:09:07,042:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:09:07,042:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:09:08,675:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-06 15:09:09,621:INFO:Initializing load_model()
2023-05-06 15:09:09,621:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-06 15:09:10,939:INFO:Initializing predict_model()
2023-05-06 15:09:10,939:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000017D60570AF0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:09:10,939:INFO:Set up data.
2023-05-06 15:09:12,143:INFO:Initializing predict_model()
2023-05-06 15:09:12,143:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000017D5EDC3CA0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:09:12,143:INFO:Set up data.
2023-05-06 15:09:13,299:INFO:Initializing predict_model()
2023-05-06 15:09:13,299:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000017D7EEDC0D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:09:13,300:INFO:Set up data.
2023-05-06 15:09:14,487:INFO:Initializing predict_model()
2023-05-06 15:09:14,487:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000017D60570AF0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:09:14,487:INFO:Set up data.
2023-05-06 15:09:15,633:INFO:Initializing predict_model()
2023-05-06 15:09:15,633:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000017D60570AF0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:09:15,633:INFO:Set up data.
2023-05-06 15:09:16,789:INFO:Initializing predict_model()
2023-05-06 15:09:16,789:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000017D7EEDC0D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:09:16,789:INFO:Set up data.
2023-05-06 15:09:17,956:INFO:Initializing predict_model()
2023-05-06 15:09:17,956:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000017D7EEDC0D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:09:17,956:INFO:Set up data.
2023-05-06 15:09:19,133:INFO:Initializing predict_model()
2023-05-06 15:09:19,133:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000017D60570AF0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:09:19,133:INFO:Set up data.
2023-05-06 15:09:20,275:INFO:Initializing predict_model()
2023-05-06 15:09:20,275:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000017D60570AF0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:09:20,275:INFO:Set up data.
2023-05-06 15:09:21,427:INFO:Initializing predict_model()
2023-05-06 15:09:21,427:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000017D7EEDC0D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:09:21,427:INFO:Set up data.
2023-05-06 15:10:06,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:10:06,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:10:06,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:10:06,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:10:06,589:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-06 15:11:16,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:11:16,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:11:16,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:11:16,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:11:16,708:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-06 15:11:17,438:INFO:Initializing load_model()
2023-05-06 15:11:17,438:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-06 15:11:17,760:INFO:Initializing predict_model()
2023-05-06 15:11:17,760:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001EAE13C0DC0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:11:17,760:INFO:Set up data.
2023-05-06 15:14:01,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:14:01,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:14:01,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:14:01,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:14:01,998:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-06 15:14:02,741:INFO:Initializing load_model()
2023-05-06 15:14:02,741:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-06 15:14:03,058:INFO:Initializing predict_model()
2023-05-06 15:14:03,058:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000011A10160DF0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:14:03,058:INFO:Set up data.
2023-05-06 15:18:26,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:18:26,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:18:26,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:18:26,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:18:26,768:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-06 15:18:27,506:INFO:Initializing load_model()
2023-05-06 15:18:27,506:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-06 15:18:27,864:INFO:Initializing predict_model()
2023-05-06 15:18:27,864:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000163BE006920>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:27,864:INFO:Set up data.
2023-05-06 15:18:29,009:INFO:Initializing predict_model()
2023-05-06 15:18:29,009:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001639DF33FA0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:29,009:INFO:Set up data.
2023-05-06 15:18:30,175:INFO:Initializing predict_model()
2023-05-06 15:18:30,175:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000163BE4306A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:30,175:INFO:Set up data.
2023-05-06 15:18:31,317:INFO:Initializing predict_model()
2023-05-06 15:18:31,317:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000163BE4306A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:31,317:INFO:Set up data.
2023-05-06 15:18:32,468:INFO:Initializing predict_model()
2023-05-06 15:18:32,468:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000163BE4306A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:32,469:INFO:Set up data.
2023-05-06 15:18:33,620:INFO:Initializing predict_model()
2023-05-06 15:18:33,620:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000163BE4306A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:33,621:INFO:Set up data.
2023-05-06 15:18:34,792:INFO:Initializing predict_model()
2023-05-06 15:18:34,792:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001639F6E0DF0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:34,792:INFO:Set up data.
2023-05-06 15:18:35,937:INFO:Initializing predict_model()
2023-05-06 15:18:35,937:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000163BE31A140>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:35,937:INFO:Set up data.
2023-05-06 15:18:37,088:INFO:Initializing predict_model()
2023-05-06 15:18:37,088:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000163BE430640>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:37,088:INFO:Set up data.
2023-05-06 15:18:38,241:INFO:Initializing predict_model()
2023-05-06 15:18:38,241:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001639F6E0DF0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:38,241:INFO:Set up data.
2023-05-06 15:18:39,392:INFO:Initializing predict_model()
2023-05-06 15:18:39,392:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000163BE4306A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:39,392:INFO:Set up data.
2023-05-06 15:18:40,546:INFO:Initializing predict_model()
2023-05-06 15:18:40,546:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000163BE4306A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:18:40,546:INFO:Set up data.
2023-05-06 15:19:07,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:19:07,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:19:07,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:19:07,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:19:07,872:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-06 15:19:08,616:INFO:Initializing load_model()
2023-05-06 15:19:08,616:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-06 15:19:08,918:INFO:Initializing predict_model()
2023-05-06 15:19:08,918:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000252076F6920>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:19:08,918:INFO:Set up data.
2023-05-06 15:19:28,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:19:28,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:19:28,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:19:28,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 15:19:29,445:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-06 15:19:30,181:INFO:Initializing load_model()
2023-05-06 15:19:30,181:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-06 15:19:30,483:INFO:Initializing predict_model()
2023-05-06 15:19:30,483:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000021FDD5B6920>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:19:30,483:INFO:Set up data.
2023-05-06 15:19:31,641:INFO:Initializing predict_model()
2023-05-06 15:19:31,641:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000021FDD9E06A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:19:31,641:INFO:Set up data.
2023-05-06 15:19:32,798:INFO:Initializing predict_model()
2023-05-06 15:19:32,798:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000021FBEC90DC0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:19:32,798:INFO:Set up data.
2023-05-06 15:19:33,969:INFO:Initializing predict_model()
2023-05-06 15:19:33,969:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000021FDD9E06A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:19:33,969:INFO:Set up data.
2023-05-06 15:19:35,139:INFO:Initializing predict_model()
2023-05-06 15:19:35,139:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000021FBEC90DC0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:19:35,139:INFO:Set up data.
2023-05-06 15:19:36,342:INFO:Initializing predict_model()
2023-05-06 15:19:36,342:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000021FDD5B6920>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:19:36,342:INFO:Set up data.
2023-05-06 15:19:37,480:INFO:Initializing predict_model()
2023-05-06 15:19:37,480:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000021FBEC90DC0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 15:19:37,480:INFO:Set up data.
2023-05-06 21:30:47,996:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 21:30:47,996:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 21:30:47,996:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 21:30:47,996:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 21:30:49,204:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-06 21:31:10,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 21:31:10,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 21:31:10,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 21:31:10,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-06 21:31:10,924:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-06 21:31:53,408:INFO:Initializing load_model()
2023-05-06 21:31:53,408:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-06 21:31:53,976:INFO:Initializing predict_model()
2023-05-06 21:31:53,976:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001FE655399F0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 21:31:53,976:INFO:Set up data.
2023-05-06 21:31:55,125:INFO:Initializing predict_model()
2023-05-06 21:31:55,125:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001FE65E9F730>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 21:31:55,125:INFO:Set up data.
2023-05-06 21:31:56,282:INFO:Initializing predict_model()
2023-05-06 21:31:56,282:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001FE65539A50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 21:31:56,282:INFO:Set up data.
2023-05-06 21:31:57,435:INFO:Initializing predict_model()
2023-05-06 21:31:57,435:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001FE65539A50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-06 21:31:57,435:INFO:Set up data.
2023-05-07 16:18:58,098:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 16:18:58,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 16:18:58,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 16:18:58,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 16:18:59,580:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-07 16:56:15,005:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_6872\2442957368.py:4: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns)).reset_index()

2023-05-07 16:56:36,360:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_6872\2011794475.py:4: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns)).reset_index()

2023-05-07 16:56:56,425:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_6872\4010879482.py:6: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns)).reset_index()

2023-05-07 16:57:14,753:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_6872\597040046.py:6: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns)).reset_index()

2023-05-07 16:57:24,496:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_6872\2225307180.py:6: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns)).reset_index()

2023-05-07 16:59:05,784:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_6872\3941451069.py:6: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns)).reset_index()

2023-05-07 16:59:40,952:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_6872\1158391021.py:6: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns))

2023-05-07 17:02:16,556:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_6872\446794753.py:6: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1]))

2023-05-07 17:05:14,265:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_6872\52036101.py:6: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns), ignore_index=True)

2023-05-07 17:05:47,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 17:05:47,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 17:05:47,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 17:05:47,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 17:05:47,667:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-07 17:05:50,211:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\1051556977.py:6: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns), ignore_index=True)

2023-05-07 17:06:43,737:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\2502045672.py:6: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns), ignore_index=True)

2023-05-07 17:06:48,032:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\928481629.py:6: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns), ignore_index=True)

2023-05-07 17:07:00,484:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\2692607167.py:7: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(pd.DataFrame(data.iloc[1], columns=data.columns), ignore_index=True)

2023-05-07 17:07:40,002:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\3266270233.py:7: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(data.iloc[1], ignore_index=True)

2023-05-07 17:07:47,563:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\3411217107.py:7: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(data.iloc[1], ignore_index=True)

2023-05-07 17:08:43,579:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\3411217107.py:7: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(data.iloc[1], ignore_index=True)

2023-05-07 17:09:17,961:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\3411217107.py:7: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df_new = data.append(data.iloc[1], ignore_index=True)

2023-05-07 17:12:46,653:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\3230560052.py:3: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  data = data.append(data.iloc[1], ignore_index=True)

2023-05-07 17:14:22,391:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\3230560052.py:3: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  data = data.append(data.iloc[1], ignore_index=True)

2023-05-07 17:14:58,946:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\4153447676.py:3: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  data = data.append(data.iloc[1], ignore_index=True)

2023-05-07 17:15:06,232:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\4153447676.py:3: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  data = data.append(data.iloc[1], ignore_index=True)

2023-05-07 17:15:31,311:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_23236\4153447676.py:3: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  data = data.append(data.iloc[1], ignore_index=True)

2023-05-07 22:33:15,642:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 22:33:15,674:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 22:33:15,674:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 22:33:15,674:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-07 22:33:17,124:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-07 22:43:13,500:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\3248391516.py:2: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
  print(data.iloc[:1].to_records().tostring())

2023-05-07 22:43:55,605:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\690130754.py:2: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
  print(data.iloc[:1].to_records().tostring().decode())

2023-05-07 22:50:10,815:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\3088601578.py:3: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
  s = data.iloc[:1].to_records().tostring()

2023-05-07 22:50:52,558:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\1251662983.py:3: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
  s = data.iloc[:1].to_records().tostring()

2023-05-07 22:56:03,170:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\2405273034.py:2: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
  s = data.iloc[:1].to_records().tostring()

2023-05-07 22:56:36,216:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\1511409923.py:2: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
  s = data.iloc[:1].to_records().tostring()

2023-05-07 22:56:36,221:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\1511409923.py:5: DeprecationWarning: The binary mode of fromstring is deprecated, as it behaves surprisingly on unicode inputs. Use frombuffer instead
  print(np.fromstring(s, data.to_records().dtype))

2023-05-07 22:56:50,600:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\955758522.py:2: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
  s = data.iloc[:1].to_records().tostring()

2023-05-07 22:56:50,605:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\955758522.py:5: DeprecationWarning: The binary mode of fromstring is deprecated, as it behaves surprisingly on unicode inputs. Use frombuffer instead
  print(np.fromstring(s, data.iloc[:1].to_records().dtype))

2023-05-07 22:58:12,773:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\428157604.py:2: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
  s = data.iloc[:1].to_records().tostring()

2023-05-07 22:58:12,774:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\428157604.py:5: DeprecationWarning: The binary mode of fromstring is deprecated, as it behaves surprisingly on unicode inputs. Use frombuffer instead
  s2 = np.fromstring(s)

2023-05-07 22:58:32,196:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\2923092441.py:2: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
  s = data.iloc[:1].to_records().tostring()

2023-05-07 22:58:32,196:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\2923092441.py:5: DeprecationWarning: The binary mode of fromstring is deprecated, as it behaves surprisingly on unicode inputs. Use frombuffer instead
  s2 = np.fromstring(s)

2023-05-07 22:59:37,595:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\2304233525.py:2: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
  s = data.iloc[:1].to_records().tostring()

2023-05-07 22:59:37,596:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\2304233525.py:5: DeprecationWarning: The binary mode of fromstring is deprecated, as it behaves surprisingly on unicode inputs. Use frombuffer instead
  s2 = np.fromstring(s)

2023-05-07 23:18:54,974:WARNING:C:\Users\Minh Chau\AppData\Local\Temp\ipykernel_11060\3392707102.py:5: DeprecationWarning: The binary mode of fromstring is deprecated, as it behaves surprisingly on unicode inputs. Use frombuffer instead
  s2 = np.fromstring(s)

2023-05-07 23:41:51,813:INFO:Initializing load_model()
2023-05-07 23:41:51,813:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-07 23:41:53,126:INFO:Initializing predict_model()
2023-05-07 23:41:53,126:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001BBD44A9C60>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-07 23:41:53,126:INFO:Set up data.
2023-05-08 15:39:40,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:39:40,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:39:40,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:39:40,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:39:41,332:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-08 15:48:08,416:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:48:08,416:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:48:08,416:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:48:08,416:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:48:08,973:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-08 15:49:26,205:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:49:26,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:49:26,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:49:26,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:49:26,744:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-08 15:49:28,534:INFO:Initializing load_model()
2023-05-08 15:49:28,535:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 15:49:46,526:INFO:Initializing load_model()
2023-05-08 15:49:46,526:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 15:49:46,583:INFO:Initializing predict_model()
2023-05-08 15:49:46,583:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000163598720E0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:49:46,583:INFO:Set up data.
2023-05-08 15:51:13,476:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:51:13,476:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:51:13,476:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:51:13,476:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:51:14,018:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-08 15:51:21,687:INFO:Initializing load_model()
2023-05-08 15:51:21,687:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 15:51:32,668:INFO:Initializing load_model()
2023-05-08 15:51:32,668:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 15:51:32,725:INFO:Initializing predict_model()
2023-05-08 15:51:32,725:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000233C211E140>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:51:32,725:INFO:Set up data.
2023-05-08 15:52:39,285:INFO:Initializing load_model()
2023-05-08 15:52:39,285:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 15:52:39,337:INFO:Initializing predict_model()
2023-05-08 15:52:39,337:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000233C211D210>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:52:39,337:INFO:Set up data.
2023-05-08 15:53:47,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:53:47,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:53:47,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:53:47,238:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:53:47,783:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-08 15:53:51,713:INFO:Initializing load_model()
2023-05-08 15:53:51,713:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 15:54:10,957:INFO:Initializing load_model()
2023-05-08 15:54:10,958:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 15:54:11,008:INFO:Initializing predict_model()
2023-05-08 15:54:11,008:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3E140>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:11,008:INFO:Set up data.
2023-05-08 15:54:12,174:INFO:Initializing predict_model()
2023-05-08 15:54:12,174:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3E470>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:12,174:INFO:Set up data.
2023-05-08 15:54:13,355:INFO:Initializing predict_model()
2023-05-08 15:54:13,355:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3E140>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:13,355:INFO:Set up data.
2023-05-08 15:54:14,542:INFO:Initializing predict_model()
2023-05-08 15:54:14,542:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3E7A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:14,542:INFO:Set up data.
2023-05-08 15:54:15,726:INFO:Initializing predict_model()
2023-05-08 15:54:15,726:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3DAB0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:15,726:INFO:Set up data.
2023-05-08 15:54:17,078:INFO:Initializing predict_model()
2023-05-08 15:54:17,078:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3CAC0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:17,078:INFO:Set up data.
2023-05-08 15:54:19,094:INFO:Initializing predict_model()
2023-05-08 15:54:19,094:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3CD30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:19,095:INFO:Set up data.
2023-05-08 15:54:21,100:INFO:Initializing predict_model()
2023-05-08 15:54:21,100:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DEA8CF9D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:21,100:INFO:Set up data.
2023-05-08 15:54:23,112:INFO:Initializing predict_model()
2023-05-08 15:54:23,112:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3E740>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:23,112:INFO:Set up data.
2023-05-08 15:54:25,160:INFO:Initializing predict_model()
2023-05-08 15:54:25,160:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3C310>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:25,160:INFO:Set up data.
2023-05-08 15:54:27,161:INFO:Initializing predict_model()
2023-05-08 15:54:27,161:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DEA8CF8B0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:27,161:INFO:Set up data.
2023-05-08 15:54:29,184:INFO:Initializing predict_model()
2023-05-08 15:54:29,184:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3DBD0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:29,184:INFO:Set up data.
2023-05-08 15:54:31,213:INFO:Initializing predict_model()
2023-05-08 15:54:31,213:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3D9C0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:31,213:INFO:Set up data.
2023-05-08 15:54:33,253:INFO:Initializing predict_model()
2023-05-08 15:54:33,253:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3D330>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:33,253:INFO:Set up data.
2023-05-08 15:54:35,263:INFO:Initializing predict_model()
2023-05-08 15:54:35,263:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DEA8CD780>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:35,263:INFO:Set up data.
2023-05-08 15:54:37,261:INFO:Initializing predict_model()
2023-05-08 15:54:37,262:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000025DE9E3CD30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:54:37,262:INFO:Set up data.
2023-05-08 15:57:19,377:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:57:19,377:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:57:19,377:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:57:19,377:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 15:57:19,905:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-08 15:57:21,938:INFO:Initializing load_model()
2023-05-08 15:57:21,938:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 15:57:22,297:INFO:Initializing predict_model()
2023-05-08 15:57:22,298:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533E7DF00>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:22,298:INFO:Set up data.
2023-05-08 15:57:23,480:INFO:Initializing predict_model()
2023-05-08 15:57:23,480:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533E7E470>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:23,480:INFO:Set up data.
2023-05-08 15:57:24,646:INFO:Initializing predict_model()
2023-05-08 15:57:24,646:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533E7C7C0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:24,646:INFO:Set up data.
2023-05-08 15:57:25,819:INFO:Initializing predict_model()
2023-05-08 15:57:25,819:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533FC1150>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:25,819:INFO:Set up data.
2023-05-08 15:57:26,975:INFO:Initializing predict_model()
2023-05-08 15:57:26,975:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533E7DF30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:26,975:INFO:Set up data.
2023-05-08 15:57:28,140:INFO:Initializing predict_model()
2023-05-08 15:57:28,140:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533FC1150>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:28,140:INFO:Set up data.
2023-05-08 15:57:29,296:INFO:Initializing predict_model()
2023-05-08 15:57:29,297:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533E7CD30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:29,297:INFO:Set up data.
2023-05-08 15:57:30,450:INFO:Initializing predict_model()
2023-05-08 15:57:30,450:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533FC1150>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:30,451:INFO:Set up data.
2023-05-08 15:57:31,612:INFO:Initializing predict_model()
2023-05-08 15:57:31,612:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533E7D9C0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:31,613:INFO:Set up data.
2023-05-08 15:57:32,766:INFO:Initializing predict_model()
2023-05-08 15:57:32,766:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533FC1150>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:32,766:INFO:Set up data.
2023-05-08 15:57:33,949:INFO:Initializing predict_model()
2023-05-08 15:57:33,949:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533E7E860>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:33,949:INFO:Set up data.
2023-05-08 15:57:35,108:INFO:Initializing predict_model()
2023-05-08 15:57:35,108:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533FC1150>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:35,108:INFO:Set up data.
2023-05-08 15:57:36,294:INFO:Initializing predict_model()
2023-05-08 15:57:36,294:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533E7CD30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:36,294:INFO:Set up data.
2023-05-08 15:57:37,498:INFO:Initializing predict_model()
2023-05-08 15:57:37,498:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533FC1150>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:37,498:INFO:Set up data.
2023-05-08 15:57:38,658:INFO:Initializing predict_model()
2023-05-08 15:57:38,658:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000018533E7D9C0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 15:57:38,658:INFO:Set up data.
2023-05-08 16:12:32,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:12:32,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:12:32,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:12:32,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:12:33,033:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-08 16:12:33,847:INFO:Initializing load_model()
2023-05-08 16:12:33,847:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 16:12:34,205:INFO:Initializing predict_model()
2023-05-08 16:12:34,205:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002598F2DDED0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:12:34,205:INFO:Set up data.
2023-05-08 16:12:35,382:INFO:Initializing predict_model()
2023-05-08 16:12:35,382:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002598F2DE440>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:12:35,382:INFO:Set up data.
2023-05-08 16:12:36,545:INFO:Initializing predict_model()
2023-05-08 16:12:36,545:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002598F2DC790>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:12:36,545:INFO:Set up data.
2023-05-08 16:12:37,706:INFO:Initializing predict_model()
2023-05-08 16:12:37,706:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002598F421120>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:12:37,706:INFO:Set up data.
2023-05-08 16:12:38,864:INFO:Initializing predict_model()
2023-05-08 16:12:38,864:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002598F2DDF00>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:12:38,865:INFO:Set up data.
2023-05-08 16:13:03,567:INFO:Initializing load_model()
2023-05-08 16:13:03,567:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 16:13:03,621:INFO:Initializing predict_model()
2023-05-08 16:13:03,621:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002598F2DE380>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:13:03,621:INFO:Set up data.
2023-05-08 16:13:04,784:INFO:Initializing predict_model()
2023-05-08 16:13:04,784:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002598F2DDF60>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:13:04,784:INFO:Set up data.
2023-05-08 16:13:05,947:INFO:Initializing predict_model()
2023-05-08 16:13:05,947:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002598F2DDF30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:13:05,947:INFO:Set up data.
2023-05-08 16:13:07,112:INFO:Initializing predict_model()
2023-05-08 16:13:07,112:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002598F2DC2B0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:13:07,112:INFO:Set up data.
2023-05-08 16:13:08,295:INFO:Initializing predict_model()
2023-05-08 16:13:08,295:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002598F2DE110>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:13:08,295:INFO:Set up data.
2023-05-08 16:27:13,823:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:27:13,824:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:27:13,824:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:27:13,824:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:27:14,353:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-08 16:36:43,122:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:36:43,122:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:36:43,122:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:36:43,122:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:36:43,797:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-08 16:41:59,792:INFO:Initializing load_model()
2023-05-08 16:41:59,793:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 16:42:00,152:INFO:Initializing predict_model()
2023-05-08 16:42:00,152:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000019F73AB1E70>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:42:00,152:INFO:Set up data.
2023-05-08 16:43:48,020:INFO:Initializing load_model()
2023-05-08 16:43:48,020:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 16:43:48,074:INFO:Initializing predict_model()
2023-05-08 16:43:48,074:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x0000019F73AB2590>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:43:48,074:INFO:Set up data.
2023-05-08 16:44:17,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:44:17,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:44:17,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:44:17,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-08 16:44:17,912:INFO:Soft dependency imported: prophet: 1.1.2
2023-05-08 16:44:21,864:INFO:Initializing load_model()
2023-05-08 16:44:21,864:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 16:44:22,210:INFO:Initializing predict_model()
2023-05-08 16:44:22,211:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000246C3BF1210>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:44:22,211:INFO:Set up data.
2023-05-08 16:44:33,969:INFO:Initializing load_model()
2023-05-08 16:44:33,969:INFO:load_model(model_name=knn, platform=None, authentication=None, verbose=True)
2023-05-08 16:44:34,027:INFO:Initializing predict_model()
2023-05-08 16:44:34,027:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000246C3AAE740>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:44:34,027:INFO:Set up data.
2023-05-08 16:44:35,240:INFO:Initializing predict_model()
2023-05-08 16:44:35,241:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000246C3AAE7D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:44:35,241:INFO:Set up data.
2023-05-08 16:44:36,430:INFO:Initializing predict_model()
2023-05-08 16:44:36,430:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000246C3AAE740>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:44:36,430:INFO:Set up data.
2023-05-08 16:44:37,611:INFO:Initializing predict_model()
2023-05-08 16:44:37,611:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000246C3AAE7D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:44:37,611:INFO:Set up data.
2023-05-08 16:44:38,780:INFO:Initializing predict_model()
2023-05-08 16:44:38,780:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000246C4543520>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:44:38,780:INFO:Set up data.
2023-05-08 16:44:39,951:INFO:Initializing predict_model()
2023-05-08 16:44:39,951:INFO:predict_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x00000246C3AAD9F0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MINHCH~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['is_weekday'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['day_name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['day...
                 TransformerWrapper(include=['day_name'],
                                    transformer=OneHotEncoder(cols=['day_name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=MinMaxScaler())),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))]), ml_usecase=None)
2023-05-08 16:44:39,951:INFO:Set up data.
